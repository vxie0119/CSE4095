AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  hw11-task1

  Sample SAM Template for hw11-task1

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Role: arn:aws:iam::851725362931:role/LabRole
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
  
  # Task 2: Dynamo DB table
  PlayersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Players
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
    
  # Task 2: Lambda function that writes to table
  PlayerDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: player_data/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role: arn:aws:iam::851725362931:role/LabRole
      Environment: 
        Variables:
          TABLE_NAME: Players
      Events:
        PostPlayerData:
          Type: Api
          Properties:
            Path: /playerdata
            Method: post
            RestApiId: !Ref ServerlessRestApi

  # Task 3: S3 Bucket Resource Definition
  MyPrivateS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: hw11-bucket

  # Task 3: OAI 
  MyOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI for MyPrivateS3Bucket

  # Task 3: Cloudfront Distribution Resource Definition
  MyCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt MyPrivateS3Bucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${MyOAI}
        Enabled: 'true'
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  #ApplicationInsightsMonitoring:
    #Type: AWS::ApplicationInsights::Application
    #Properties:
      #ResourceGroupName:
        #Ref: ApplicationResourceGroup
      #AutoConfigurationEnabled: 'true'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  #HelloWorldFunctionIamRole:
    #Description: Implicit IAM Role created for Hello World function
    #Value: !GetAtt HelloWorldFunctionRole.Arn

  # Task 2: For DB and API
  PlayerDataApi:
    Description: API Gateway endpoint URL for POST method
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/playerdata/"
  PlayersTableArn:
    Description: "DynamoDB table ARN"
    Value: !GetAtt PlayersTable.Arn

  # Task 3: S3 and Cloudfront Output
  S3BucketWebsiteURL:
    Description: URL for website hosted on S3
    Value: !GetAtt MyPrivateS3Bucket.WebsiteURL

  CloudFrontDistributionDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt MyCloudFrontDistribution.DomainName